const http=require('http');const https=require('https');const fh=u=>new Promise((rs,rj)=>{const o=new URL(u);https.get({hostname:o.hostname,path:o.pathname+o.search,headers:{'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'},timeout:30000},(r)=>{const c=[];r.on('data',chunk=>c.push(chunk));r.on('end',()=>rs(Buffer.concat(c).toString()));r.on('error',rj)}).on('error',rj)});const ft=async u=>{for(let i=0;i<3;i++){try{return await new Promise((rs,rj)=>{https.get(u,{headers:{'User-Agent':'Mozilla/5.0'},timeout:30000},(r)=>{let d='';r.on('data',c=>d+=c);r.on('end',()=>{try{rs(JSON.parse(d))}catch{rs(null)}});r.on('error',()=>rs(null))}).on('error',()=>rs(null))})}catch{}}return null};const q=(s,c)=>{const patterns={'ds-dex-table-row-base-token-symbol':/>([^<]+)<\/span>/,'ds-dex-table-row-base-token-name':/>([^<]+)<\/span>/,'ds-dex-table-row-col-market-cap':/>(\$<!--\s*-->[\d.,KMB]+)/,'ds-dex-table-row-col-fdv':/>(\$<!--\s*-->[\d.,KMB]+)/,'ds-dex-table-row-col-price':/>(\$<!--\s*-->[\d.,]+)/,'ds-dex-table-row-col-volume':/>(\$<!--\s*-->[\d.,KMB]+)/,'ds-dex-table-row-col-liquidity':/>(\$<!--\s*-->[\d.,KMB]+)/,'ds-dex-table-row-col-pair-age':/<span>([^<]+)<\/span>/,'ds-change-perc':/>([^<]+)<\/span>/};const p=patterns[c]||/>([^<]*)/;const m=s.match(new RegExp(`class="[^"]*${c}[^"]*"[^>]*[\\s\\S]*?${p.source}`));return m?.[1]?.replace(/<!--\s*-->/g,'')?.trim()};const p=v=>!v||v==='-'?0:parseFloat(v.replace(/[,$]/g,''))*(v.toLowerCase().includes('k')?1e3:v.toLowerCase().includes('m')?1e6:v.toLowerCase().includes('b')?1e9:1);const f=t=>p(t.mcap)>=1e5&&p(t.liquidity)>=2e4;const rq=[];const r=()=>{const n=Date.now();rq.splice(0);rq.push(...rq.filter(t=>n-t<6e4));return rq.length<60};const gt=async(c,g)=>{const h=await fh(g>1?`https://dexscreener.com/${c}/page-${g}`:`https://dexscreener.com/${c}`);return(h.match(/<a[^>]*class="[^"]*ds-dex-table-row[^"]*"[^>]*>([\s\S]*?)<\/a>/g)||[]).map(x=>{const a=x.match(/\/tokens\/solana\/([^.]+)/)?.[1],s=q(x,'ds-dex-table-row-base-token-symbol');return a&&s?{url:`https://dexscreener.com${x.match(/href="([^"]*)"/)?.[1]}`,address:a,symbol:s,name:q(x,'ds-dex-table-row-base-token-name')||s,mcap:q(x,'ds-dex-table-row-col-market-cap')||'0',fdv:q(x,'ds-dex-table-row-col-fdv')||'0',price:q(x,'ds-dex-table-row-col-price')||'0',change5m:q(x,'ds-change-perc'),change1h:'0',change6h:'0',change24h:'0',volume:q(x,'ds-dex-table-row-col-volume')||'0',liquidity:q(x,'ds-dex-table-row-col-liquidity')||'0',txns:q(x,'ds-dex-table-row-col-txns')||'0',makers:q(x,'ds-dex-table-row-col-makers')||'0',age:q(x,'ds-dex-table-row-col-pair-age')||'0',chain:c,timestamp:new Date().toISOString()}:null}).filter(t=>t&&f(t))};const en=async ts=>{const rs=[];for(let i=0;i<ts.length;i+=30){if(!r())await new Promise(x=>setTimeout(x,1e3));rq.push(Date.now());const d=await ft(`https://api.dexscreener.com/tokens/v1/solana/${ts.slice(i,i+30).map(t=>t.address).join(',')}`);if(d)ts.slice(i,i+30).forEach(t=>{const a=d.find(x=>x.baseToken?.address.toLowerCase()===t.address.toLowerCase());if(a){const s={};a.info?.websites?.forEach(w=>s[w.label.toLowerCase()]=w.url);a.info?.socials?.forEach(x=>s[x.type]=x.url);rs.push({...t,fdv:a.fdv>=1e9?`$${(a.fdv/1e9).toFixed(1)}B`:a.fdv>=1e6?`$${(a.fdv/1e6).toFixed(1)}M`:`$${(a.fdv/1e3).toFixed(1)}K`,priceNative:a.priceNative,volume:{m5:a.volume?.m5||0,h1:a.volume?.h1||0,h6:a.volume?.h6||0,h24:a.volume?.h24||0},txns:{m5:a.txns?.m5||0,h1:a.txns?.h1||0,h6:a.txns?.h6||0,h24:a.txns?.h24||0},boosts:a.boosts?.active||0,social:Object.keys(s).length?s:null})}else rs.push(t)})}return rs};const getAllTokens=async()=>{try{const a=[],s=new Set();for(let g=1;g<=20;g+=5){const r=await Promise.all([0,1,2,3,4].map(i=>gt('solana',g+i)));r.forEach(ts=>ts.forEach(t=>{if(!s.has(t.address)){s.add(t.address);a.push(t)}}));await new Promise(x=>setTimeout(x,50))}return await en(a)}catch(e){return[]}};const server=http.createServer((req,res)=>{if(req.url==='/'){getAllTokens().then(data=>{res.writeHead(200,{'Content-Type':'application/json','Access-Control-Allow-Origin':'*'});res.end(JSON.stringify(data))}).catch(e=>{res.writeHead(500,{'Content-Type':'application/json'});res.end(JSON.stringify({error:'Failed'}))})}else if(req.url==='/test'){fh('https://dexscreener.com/solana').then(h=>{res.writeHead(200,{'Content-Type':'text/plain'});res.end(h.substring(0,5000))}).catch(e=>{res.writeHead(500);res.end('Error')})}else{res.writeHead(404);res.end('Not found')}});server.listen(process.env.PORT||3000);
